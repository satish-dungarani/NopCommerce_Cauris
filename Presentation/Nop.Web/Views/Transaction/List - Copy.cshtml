@using Nop.Web.Models.Transactions
@model TransactionSearchModel
@{
    Layout = "_ColumnsTwo";
    //page title
    ViewBag.PageTitle = Model.IsReceived ? T("Transaction.List.Received").Text : T("Transaction.List.Sent").Text;

    Html.AppendCssFileParts(ResourceLocation.Head, "~/lib/bootstrap/css/bootstrap.min.css");
    //page class
    Html.AppendPageCssClassParts("html-account-page");
    Html.AppendPageCssClassParts("html-customer-info-page");
}

@section left
{
    @await Component.InvokeAsync("CustomerNavigation", new { selectedTabId = Model.IsReceived ? CustomerNavigationEnum.ReceivedTransactions : CustomerNavigationEnum.SentTransactions })
}
<div class="page account-page customer-info-page">
    <div class="page-title">
        <h1>
            @if (Model.IsReceived)
            {
                @T("Transactions.Received")
            }
            else
            {
                @T("Transactions.Sent")
            }
        </h1>
    </div>
    <div class="page-body">
        <div class="panel-group">
            <div class="panel panel-default panel-search">
                <div class="panel-body">
                    <div class="search-body">
                        <div class="row">
                            <div class="col-md-6">
                                <input asp-for="IsReceived" type="hidden" />
                                <nop-editor asp-for="Keyword" />
                            </div>
                            <div class="col-md-2">
                                <button type="button" id="search-quotations" class="btn btn-primary btn-search">
                                    <i class="fa fa-search"></i>
                                    @T("Admin.Common.Search")
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="panel panel-default">
                <div class="panel-body">
                    @{
                        var gridModel = new DataTablesModel
                        {
                            Name = "transaction-grid",
                            UrlRead = new DataUrl(Model.IsReceived ? "List" : "List", "Transaction", null),
                            SearchButtonId = "search-quotations",
                            Length = Model.PageSize,
                            LengthMenu = Model.AvailablePageSizes,
                            Filters = new List<FilterParameter>
                                                                                                                                             {
                                    new FilterParameter(nameof(Model.Keyword)),
                                    new FilterParameter(nameof(Model.IsReceived)),
                                }
                        };

                        gridModel.ColumnCollection.Add(new ColumnProperty(nameof(TransactionOverviewModel.TransactionNumber))
                        {
                            Title = "Number"
                        });
                        gridModel.ColumnCollection.Add(new ColumnProperty(nameof(TransactionOverviewModel.ProductName))
                        {
                            Title = "Product"
                        });
                        if (Model.IsReceived)
                        {
                            gridModel.ColumnCollection.Add(new ColumnProperty(nameof(TransactionOverviewModel.CustomerName))
                            {
                                Title = "Customer"
                            });
                        }
                        else
                        {
                            gridModel.ColumnCollection.Add(new ColumnProperty(nameof(TransactionOverviewModel.VendorName))
                            {
                                Title = "Vendor"
                            });
                        }
                        gridModel.ColumnCollection.Add(new ColumnProperty(nameof(TransactionOverviewModel.Amount))
                        {
                            Title = "Amount"
                        });
                        gridModel.ColumnCollection.Add(new ColumnProperty(nameof(TransactionOverviewModel.TransactionStatus))
                        {
                            Title = "Status"
                        });
                        gridModel.ColumnCollection.Add(new ColumnProperty(nameof(TransactionOverviewModel.PaymentType))
                        {
                            Title = "Payment Type"
                        });
                        gridModel.ColumnCollection.Add(new ColumnProperty(nameof(TransactionOverviewModel.DeliveryType))
                        {
                            Title = "Delivery Type"
                        });
                        gridModel.ColumnCollection.Add(new ColumnProperty(nameof(TransactionOverviewModel.CreatedOnUtc))
                        {
                            Title = "Created On"
                        });

                        gridModel.ColumnCollection.Add(new ColumnProperty(nameof(TransactionOverviewModel.Id))
                        {
                            Title = "Action",
                            Width = "80",
                            ClassName = NopColumnClassDefaults.Button,
                            Render = new RenderButtonEdit(new DataUrl("Edit")),

                        });
                    }
                    @await Html.PartialAsync("_Table", gridModel)
                </div>
            </div>
        </div>
    </div>
</div>


