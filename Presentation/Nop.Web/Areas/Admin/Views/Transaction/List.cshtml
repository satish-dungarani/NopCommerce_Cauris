@model TransactionSearchModel

@{
    //page title
    ViewBag.PageTitle = T("Admin.Cauris.Transaction").Text;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Transaction List");
}

@{
    const string hideSearchBlockAttributeName = "TransactionPage.HideSearchBlock";
    var hideSearchBlock = genericAttributeService.GetAttribute<bool>(workContext.CurrentCustomer, hideSearchBlockAttributeName);
}

<div class="content-header clearfix">
    <h1 class="pull-left">
        @T("Admin.Cauris.Transaction")
    </h1>
    <div class="pull-right">
        @*<a asp-action="Create" class="btn bg-blue">
            <i class="fa fa-plus-square"></i>
            @T("Admin.Common.AddNew")
        </a>*@
    </div>
</div>

<div class="content">
    <div class="form-horizontal">
        <div class="panel-group">
            <div class="panel panel-default panel-search">
                <div class="panel-body">
                    <div class="row search-row @(!hideSearchBlock ? "opened" : "")" data-hideAttribute="@hideSearchBlockAttributeName">
                        <div class="search-text">@T("Admin.Common.Search")</div>
                        <div class="icon-search"><i class="fa fa-search" aria-hidden="true"></i></div>
                        <div class="icon-collapse"><i class="fa fa-angle-down" aria-hidden="true"></i></div>
                    </div>

                    <div class="search-body @(hideSearchBlock ? "closed" : "")">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="TransactionStatusIds" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-select asp-for="TransactionStatusIds" asp-items="Model.AvailableTransactionStatus" asp-multiple="true" />
                                    </div>
                                </div>

                                @*<div class="form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="TransactionNumber" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-editor asp-for="TransactionNumber" />
                                    </div>
                                </div>*@
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="ProductId" />
                                    </div>
                                    <div class="col-md-8">
                                        <input type="text" id="search-product-name" autocomplete="off" class="form-control" />
                                        <span id="search-product-friendly-name"></span>
                                        <button type="button" id="search-product-clear" class="btn bg-gray" style="display: none; margin-top: 5px;">@T("Admin.Common.Clear")</button>
                                        <input asp-for="ProductId" autocomplete="off" style="display: none;" />
                                        <script>
                                                $(document).ready(function() {
                                                    $('#search-product-name').autocomplete({
                                                        delay: 500,
                                                        minLength: 3,
                                                        source: '@Url.Action("SearchAutoComplete", "SearchComplete")',
                                                        select: function(event, ui) {
                                                            $('#@Html.IdFor(model => model.ProductId)').val(ui.item.productid);
                                                            $('#search-product-friendly-name').text(ui.item.label);

                                                            $('#search-product-clear').show();
                                                            return false;
                                                        }
                                                    });

                                                    //remove button
                                                    $('#search-product-clear').click(function() {
                                                        $('#@Html.IdFor(model => model.ProductId)').val('0');
                                                        $('#search-product-friendly-name').text('');
                                                        $('#search-product-clear').hide();
                                                        return false;
                                                    });
                                                });
                                        </script>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-7 col-md-offset-5">
                                <button type="button" id="search-vendors" class="btn btn-primary btn-search">
                                    <i class="fa fa-search"></i>
                                    @T("Admin.Common.Search")
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="panel panel-default">
                <div class="panel-body">
                    @await Html.PartialAsync("Table", new DataTablesModel
               {
                   Name = "vendors-grid",
                   UrlRead = new DataUrl("List", "Transaction", null),
                   SearchButtonId = "search-vendors",
                   Length = Model.PageSize,
                   LengthMenu = Model.AvailablePageSizes,
                   Filters = new List<FilterParameter>
                        {
                            new FilterParameter(nameof(Model.TransactionStatusIds)),
                             new FilterParameter(nameof(Model.ProductId)),
                        },
                   ColumnCollection = new List<ColumnProperty>
                        {
                            new ColumnProperty(nameof(TransactionModel.BuyerName))
                            {
                                Title = T("Corus.Admin.Transaction.Field.BuyerName").Text,
                                Width = "300"
                            },
                             new ColumnProperty(nameof(TransactionModel.ProductName))
                            {
                                  Title = T("Corus.Admin.Transaction.Field.ProductName").Text,
                                Width = "300"
                            },
                            new ColumnProperty(nameof(TransactionModel.TransactionStatus))
                            {
                                 Title = T("Corus.Admin.Transaction.Field.TransactionStatus").Text,
                                Width = "300"
                            },
                            new ColumnProperty(nameof(TransactionModel.ModeratorIdentity))
                            {
                                Title = T("Corus.Admin.Transaction.Field.ModeratorIdentity").Text,
                                Width = "300"
                            },

                            new ColumnProperty(nameof(TransactionModel.CreatedOnUtc))
                            {
                                  Title = T("Admin.Orders.Fields.CreatedOn").Text,
                                 Width = "120",
                                Render = new RenderDate()
                            },
                             //a vendor does not have access to this functionality
                            new ColumnProperty(nameof(TransactionModel.Id))
                            {
                                Title = T("Admin.Common.View").Text,
                                Width = "50",
                                ClassName = NopColumnClassDefaults.Button,
                                Render = new RenderButtonView(new DataUrl("Edit"))
                            }
                        }
                    })

                    <script>
                        function renderColumnOrderStatus(data, type, row, meta) {
                            var color;
                            switch (row.OrderStatusId) {
                                case 10:
                                    color = 'yellow';
                                    break;
                                case 20:
                                    color = 'blue';
                                    break;
                                case 30:
                                    color = 'green';
                                    break;
                                case 40:
                                    color = 'red';
                                    break;
                            }
                            return '<span class="grid-report-item ' + color + '">' + data + '</span >';
                        }
                            function ordersfootercallback(tfoot, data, start, end, display) {
                                //update order totals summary
                                var postData = {
                                    TransactionStatusIds: $('#@Html.IdFor(model => model.TransactionStatusIds)').val(),
                                     ProductId: $('#@Html.IdFor(model => model.ProductId)').val(),
                                };
                                addAntiForgeryToken(postData);

                            }
                    </script>
                </div>
            </div>
        </div>
    </div>
</div>
