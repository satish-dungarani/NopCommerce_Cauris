@using Nop.Web.Models.Transactions
@using Nop.Core.Domain.Transactions
@using System;
@using Nop.Services;
@model TransactionOverviewModel

@{
    //page title
    ViewBag.PageTitle = "Edit Transaction";/*Model.IsReceived ? T("Transaction.List.Received").Text : T("Transaction.List.Sent").Text;*/

    Html.AppendCssFileParts(ResourceLocation.Head, "~/lib/bootstrap/css/bootstrap.min.css");

    var transStausList = Enum.GetValues(typeof(TransactionStatus));
    var crumWidth = (92.00 / transStausList.Length);
    Html.AppendScriptParts("~/lib/jquery/jquery-3.4.1.min.js");
    Html.AddCssFileParts("~/lib/fontAwesome/css/font-awesome.css");
    Html.AddCssFileParts("~/lib/fineuploader/fine-uploader-new.css");
    Html.AddScriptParts(ResourceLocation.Footer, "~/lib/fineuploader/jquery.fine-uploader.js");
}

<style>
    #crumbs {
        text-align: center;
    }

        #crumbs ul {
            list-style: none;
            display: inline-table;
        }

            #crumbs ul li {
                display: inline;
            }

                #crumbs ul li a {
                    display: block;
                    float: left;
                    height: 80px;
                    background: #909090;
                    text-align: center;
                    padding: 10px 15px 0 30px;
                    position: relative;
                    margin: 5px;
                    font-size: 11px;
                    text-decoration: none;
                    color: #fff;
                    cursor: default;
                }

                    #crumbs ul li a:after {
                        content: "";
                        border-top: 40px solid transparent;
                        border-bottom: 40px solid transparent;
                        border-left: 30px solid #909090;
                        position: absolute;
                        right: -30px;
                        top: 0;
                        z-index: 1;
                    }

                    #crumbs ul li a:before {
                        content: "";
                        border-top: 40px solid transparent;
                        border-bottom: 40px solid transparent;
                        border-left: 30px solid #ffffff;
                        position: absolute;
                        left: 0;
                        top: 0;
                    }

                #crumbs ul li:first-child a {
                    border-top-left-radius: 10px;
                    border-bottom-left-radius: 10px;
                }

                    #crumbs ul li:first-child a:before {
                        display: none;
                    }

                #crumbs ul li:last-child a {
                    padding-right: 40px;
                    border-top-right-radius: 10px;
                    border-bottom-right-radius: 10px;
                }

                    #crumbs ul li:last-child a:after {
                        display: none;
                    }
</style>

<div id="crumbs">
    <ul>

        @foreach (TransactionStatus item in transStausList)
        {
            <li id="@item.ToString()">
                <a href="javascript:void(0);" style="@if ((int)item == Model.TransactionStatusId) {<text> background: #5bc0de; </text>} else if ((int)item < Model.TransactionStatusId) { <text>background: #5cb85c; </text>}width:@crumWidth%;">
                    @item.GetDescription()
                </a>
            </li>
            if ((int)item == Model.TransactionStatusId)
            {
                <style>
                    #crumbs ul #@item.ToString() a:after {
                        border-left-color: #5bc0de;
                    }
                </style>
            }
            else if ((int)item < Model.TransactionStatusId)
            {
                <style>
                    #crumbs ul #@item.ToString() a:after {
                        border-left-color: #5cb85c;
                    }
                </style>
            }
        }
    </ul>
</div>

<form method="post" autocomplete="off" enctype="multipart/form-data">
    @Html.HiddenFor(x => x.Id)
    <div class="page-body panel-body from-panel">
        <table>
            <tbody>
                <tr>
                    <td style="font-weight:bold;text-align:end;width:450px;">Transaction Number</td>
                    <td style="font-weight: bold; text-align: center;">:</td>
                    <td style=""> @Model.Id</td>
                </tr>
                <tr>
                    <td style="font-weight:bold;text-align:end;">Date of Transaction</td>
                    <td style="font-weight: bold; text-align: center;">:</td>
                    <td style=""> @Model.CreatedOnUtc.ToString("dd MMM yyyy")</td>
                </tr>

                @if ((bool)ViewBag.IsReceived)
                {

                    <tr>
                        <td style="font-weight:bold;text-align:end;width:450px;">Buyer Name</td>
                        <td style="font-weight: bold; text-align: center; width: 10%;">:</td>
                        <td style="width:45%"> @Model.CustomerName</td>
                    </tr>
                    <tr>
                        <td style="font-weight:bold;text-align:end;width:45%">Country</td>
                        <td style="font-weight: bold; text-align: center; width: 10%;">:</td>
                        <td style="width:45%"> @Model.Country</td>
                    </tr>
                }
                else
                {
                    <tr>
                        <td style="font-weight:bold;text-align:end;width:450px;">Seller Name</td>
                        <td style="font-weight: bold; text-align: center; width: 10%;">:</td>
                        <td style="width:45%"> @Model.VendorName</td>
                    </tr>
                    <tr>
                        <td style="font-weight:bold;text-align:end;width:45%">Country</td>
                        <td style="font-weight: bold; text-align: center; width: 10%;">:</td>
                        <td style="width:45%"> @Model.VendorCountry</td>
                    </tr>
                }


            </tbody>
        </table>

    </div>

    <div class="page-body panel-body from-panel">
        <table>
            <tbody>
                <tr>
                    <td style="font-weight:bold;text-align:end;width:450px;">Product</td>
                    <td style="font-weight: bold; text-align: center; width: 10%;">:</td>
                    <td style="width:45%"> @Model.ProductName</td>
                </tr>
                <tr>
                    <td style="font-weight:bold;text-align:end;width:450px;">Quantity</td>
                    <td style="font-weight: bold; text-align: center; width: 10%;">:</td>
                    <td style="width:45%"> @Model.Quantity</td>
                </tr>
                <tr>
                    <td style="font-weight:bold;text-align:end;width:450px;">Amount</td>
                    <td style="font-weight: bold; text-align: center; width: 10%;">:</td>
                    <td style="width:45%"> @Model.AmountFormat</td>
                </tr>
            </tbody>
        </table>

    </div>

    <div class="page-body panel-body from-panel">
        <table>
            <tbody>
                <tr>
                    <td style="font-weight:bold;text-align:end;width:450px;">Last note to this transaction</td>
                    <td style="font-weight: bold; text-align: center; width: 10%;">:</td>
                    <td style="width:45%">
                        @*<textarea type="text" id="TransactionAdminComment" name="TransactionAdminComment" class="form-control"></textarea>*@
                        @*<nop-textarea asp-for="@Model.TransactionAdminComment" />*@
                        @Model.ModeratorComment
                    </td>
                </tr>
                <tr>
                    <td><br /></td>
                </tr>
                <tr>
                    <td style="font-weight:bold;text-align:end;width:450px;">Add note to this transaction</td>
                    <td style="font-weight: bold; text-align: center; width: 10%;">:</td>
                    <td style="width:45%">
                        @*<textarea type="text" id="TransactionAdminComment" name="TransactionAdminComment" class="form-control"></textarea>*@
                        <nop-textarea asp-for="@Model.TransactionAdminComment" />
                    </td>
                </tr>
                <tr>
                    <td><br /></td>
                </tr>
                @if ((bool)ViewBag.IsReceived && Model.TransactionStatusId == (int)TransactionStatus.Waiting_Upload_Contract)
                {
                    <tr>
                        <td style="font-weight:bold;text-align:end;width:450px;">Sample PDF Download</td>
                        <td style="font-weight: bold; text-align: center; width: 10%;">:</td>

                        <td style="width:45%">
                            <a class="btn btn-info" href="https://www.wto.org/english/docs_e/legal_e/23-lic.pdf" target="_blank" download><i class="fa fa-download"></i> Click here for download</a>
                        </td>
                    </tr>
                }
                    <tr>
                        <td><br /></td>
                    </tr>

                    @if ((bool)ViewBag.IsReceived && Model.TransactionStatusId == (int)TransactionStatus.Waiting_Upload_Contract)
                    {
                        @if (Model.DownloadContractGuid != null && Model.DownloadContractGuid != Guid.Empty && Model.CustomerDocumentId > 0)
                        {
                            <tr>
                                <td style="font-weight:bold;text-align:end;width:450px;">Download Contract</td>
                                <td style="font-weight: bold; text-align: center; width: 10%;">:</td>
                                <td style="width:45%">
                                    <a class='btn btn-info' href="@(Url.Action("DownloadFile", "Download", new { downloadGuid = Model.DownloadContractGuid, area = AreaNames.Admin }))"><i class='fa fa-download'></i>  Download Contract</a>
                                </td>
                            </tr>
                        }
                    }

                   @if ((bool)ViewBag.IsReceived && Model.TransactionStatusId == (int)TransactionStatus.Waiting_Upload_Contract)
                    {
                        <tr>
                            <td style="font-weight:bold;text-align:end;width:450px;">Upload Contract</td>
                            <td style="font-weight: bold; text-align: center; width: 10%;">:</td>
                            <td style="width:45%">
                               
                                <div id="fine-uploader-manual-trigger"></div>
                            </td>
                        </tr>
                    }

                </tbody>
            <tfoot style="margin-top:20px;">
                <tr>
                    <td style="text-align: center; padding-top: 20px;" colspan="3">
                        @if ((bool)ViewBag.IsReceived && Model.TransactionStatusId == (int)TransactionStatus.Waiting_Upload_Contract)
                        {
                            @if (Model.CustomerDocumentId == null)
                            {
                                <button type="button" id="trigger-upload" value="@T("Common.Save")" name="save-document-button" class="btn btn-success"><i class="fa fa-save"></i>  @T("Common.Save")</button>
                            }

                        }
                        else
                        {
                            //UpdateDocument()
                            <button type="button" id="comment-update" value="@T("Common.Save")" onclick="UpdateDocument()" name="save-document-button" class="btn btn-success"><i class="fa fa-save"></i>  @T("Common.Save")</button>
                        }
                        @if ((bool)ViewBag.IsReceived)
                        {
                            <button type="button" id="buttonCancel" value="Back to List" name="save-document-button" onclick="window.location.href='@Url.Action("received","transaction")'" class="btn btn-danger"><i class="fa fa-arrow-circle-left"></i>  @T("Cauris.Transaction.Document.BackToList")</button>

                        }
                        else
                        {
                            <button type="button" id="buttonCancel" value="Back to List" name="save-document-button" onclick="window.location.href='@Url.Action("sent","transaction")'" class="btn btn-danger"><i class="fa fa-arrow-circle-left"></i>  @T("Cauris.Transaction.Document.BackToList")</button>
                        }
                    </td>
                </tr>
            </tfoot>

        </table>
    </div>
</form>

<script asp-location="Footer">
    
    function UpdateDocument() {
                var adminTransactionComment = $("#@Html.IdFor(model => model.TransactionAdminComment)").val();
                            var postData = {
                                adminTransactionComment: adminTransactionComment,
                                transactionId: '@Model.Id'
                            };
                            addAntiForgeryToken(postData);
                            $.ajax({
                                cache: false,
                                type: "POST",
                                url: "@Url.Action("SaveTransactionComment", "Transaction")",
                                data: postData,
                                dataType: "json",
                                success: function (result) {
                                    displayBarNotification('Successfully updated.','success')
                                    location.reload();
                                },
                                error: function (jqXHR, textStatus, errorThrown) {
                                    alert('Failed to Save Document');
                                }
                            });
            }
</script>
 @if ((bool)ViewBag.IsReceived && Model.TransactionStatusId == (int)TransactionStatus.Waiting_Upload_Contract)
{
    <script type="text/template" id="qq-template-manual-trigger">
        <div class="qq-uploader-selector qq-uploader" qq-drop-area-text="Drop files here">
        <div class="qq-total-progress-bar-container-selector qq-total-progress-bar-container">
        <div role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" class="qq-total-progress-bar-selector qq-progress-bar qq-total-progress-bar"></div>
        </div>
        <div class="qq-upload-drop-area-selector qq-upload-drop-area" qq-hide-dropzone>
        <span class="qq-upload-drop-area-text-selector"></span>
        </div>
        <div class="buttons">
        <div class="qq-upload-button-selector qq-upload-button">
        <div>Select files</div>
        </div>

        </div>
        <span class="qq-drop-processing-selector qq-drop-processing">
        <span>Processing dropped files...</span>
        <span class="qq-drop-processing-spinner-selector qq-drop-processing-spinner"></span>
        </span>
        <ul class="qq-upload-list-selector qq-upload-list" aria-live="polite" aria-relevant="additions removals">
        <li>
        <div class="qq-progress-bar-container-selector">
        <div role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" class="qq-progress-bar-selector qq-progress-bar"></div>
        </div>
        <span class="qq-upload-spinner-selector qq-upload-spinner"></span>
        <img class="qq-thumbnail-selector" qq-max-size="100" qq-server-scale>
        <span class="qq-upload-file-selector qq-upload-file">

        </span>
        @*<span class="qq-edit-filename-icon-selector qq-edit-filename-icon" aria-label="Edit filename"></span>*@
        <input class="qq-edit-filename-selector qq-edit-filename" tabindex="0" type="text">
        <span class="qq-upload-size-selector qq-upload-size"></span>
        <button type="button" class="qq-btn qq-upload-cancel-selector qq-upload-cancel">Cancel</button>
        <button type="button" class="qq-btn qq-upload-retry-selector qq-upload-retry">Retry</button>
        <button type="button" class="qq-btn qq-upload-delete-selector qq-upload-delete">Delete</button>
        <span role="status" class="qq-upload-status-text-selector qq-upload-status-text"></span>
        </li>
        </ul>


        <dialog class="qq-alert-dialog-selector">
        <div class="qq-dialog-message-selector"></div>
        <div class="qq-dialog-buttons">
        <button type="button" class="qq-cancel-button-selector">Close</button>
        </div>
        </dialog>

        <dialog class="qq-confirm-dialog-selector">
        <div class="qq-dialog-message-selector"></div>
        <div class="qq-dialog-buttons">
        <button type="button" class="qq-cancel-button-selector">No</button>
        <button type="button" class="qq-ok-button-selector">Yes</button>
        </div>
        </dialog>

        <dialog class="qq-prompt-dialog-selector">
        <div class="qq-dialog-message-selector"></div>
        <input type="text">
        <div class="qq-dialog-buttons">
        <button type="button" class="qq-cancel-button-selector">Cancel</button>
        <button type="button" class="qq-ok-button-selector">Ok</button>
        </div>
        </dialog>
        </div>
    </script>


    <script asp-location="Footer">
        $(document).ready(function () {
            $('#fine-uploader-manual-trigger').fineUploader({
                template: 'qq-template-manual-trigger',
                request: {
                    endpoint: '@(Url.RouteUrl("UploadFileContract", new { transactionId =Model.Id }))'
                },
                validation: {
                    itemLimit: 1
                },
                validation: {
                    allowedExtensions: ['pdf'],
                    sizeLimit: 20971520,
                    stopOnFirstInvalidFile: true
                },
                thumbnails: {
                    placeholders: {
                        waitingPath: '/lib/fineuploader/placeholders/waiting-generic.png',
                        notAvailablePath: '/lib/fineuploader/placeholders/not_available-generic.png'
                    }
                },
                autoUpload: false,

            }).on('complete', function (event, id, fileName, responseJSON) {
                UpdateDocument();
                $('#fine-uploader-manual-trigger').fineUploader('clearStoredFiles');
            });

            $('#trigger-upload').click(function () {
                $('#fine-uploader-manual-trigger').fineUploader('uploadStoredFiles');
            }); 
        })
       </script>
}